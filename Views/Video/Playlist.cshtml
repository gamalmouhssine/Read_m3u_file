<div class="container mt-5">
    <h1 class="text-center mb-4">🎥 Playlist Viewer</h1>

    <!-- Video Player -->
    <div class="video-player mb-4">
        <video id="main-video" controls width="100%" class="rounded"></video>
    </div>

    <!-- Upload M3U File -->
    <div class="custom-playlist-form mt-4">
        <h4 class="text-center">📤 Upload M3U File</h4>
        <form method="post" enctype="multipart/form-data" action="/Video/UploadM3UFile">
            <div class="form-group">
                <label for="m3uFile">Select a .m3u file:</label>
                <input type="file" id="m3uFile" name="file" class="form-control" accept=".m3u" required />
            </div>
            <div class="text-center mt-3">
                <button type="submit" class="btn btn-dark">Upload</button>
            </div>
        </form>
    </div>

    <!-- Filter and Sort Form -->
    <form method="get" class="mb-4">
        <div class="row g-3">
            <div class="col-md-4">
                <input type="text" name="filterBy" value="@ViewBag.FilterBy" class="form-control" placeholder="🔍 Filter by keyword" />
            </div>
            <div class="col-md-4">
                <select name="sortBy" class="form-control">
                    <option value="">Sort By</option>
                    <option value="name" selected="@(ViewBag.SortBy == "name")">Name</option>
                </select>
            </div>
            <div class="col-md-4">
                <button type="submit" class="btn btn-dark w-100">Apply</button>
            </div>
        </div>
    </form>

    <!-- Playlist Table -->
    <div class="playlist-table p-3">
        <table class="table table-hover">
            <thead>
                <tr>
                    <th>Video URL</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var url in Model)
                {
                    <tr>
                        <td>@url</td>
                        <td>
                            <a href="javascript:void(0)" onclick="playVideo('@url', this)" class="btn btn-play btn-sm">▶ Play</a>
                            <a href="@url" target="_blank" class="btn btn-open btn-sm">🌐 Open</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Pagination -->
    <nav class="mt-4">
        <ul class="pagination justify-content-center">
            @for (int i = 1; i <= Math.Ceiling((double)ViewBag.TotalItems / ViewBag.PageSize); i++)
            {
                <li class="page-item @(i == ViewBag.Page ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Playlist", new { filePath = ViewBag.FilePath, filterBy = ViewBag.FilterBy, sortBy = ViewBag.SortBy, page = i, pageSize = ViewBag.PageSize })">@i</a>
                </li>
            }
        </ul>
    </nav>

    <!-- Export Options -->
    <div class="mt-4 text-center">
        <h4>📤 Export Playlist</h4>
        <a href="@Url.Action("Export", new { filePath = ViewBag.FilePath, format = "json" })" class="btn btn-secondary">JSON</a>
        <a href="@Url.Action("Export", new { filePath = ViewBag.FilePath, format = "txt" })" class="btn btn-secondary">TXT</a>
        <a href="@Url.Action("Export", new { filePath = ViewBag.FilePath, format = "csv" })" class="btn btn-secondary">CSV</a>
    </div>

    <!-- Create Custom Playlist -->
    <div class="custom-playlist-form mt-4">
        <h4 class="text-center">📝 Create Custom Playlist</h4>
        <form id="createPlaylistForm">
            <div class="form-group">
                <label for="videoUrls">Enter Video URLs (one per line):</label>
                <textarea id="videoUrls" name="videoUrls" class="form-control" rows="5"></textarea>
            </div>
            <div class="text-center mt-3">
                <button type="submit" class="btn btn-dark">Create Playlist</button>
            </div>
        </form>
    </div>
</div>

<!-- Include hls.js for HLS stream support -->
<script src="https://cdn.jsdelivr.net/npm/hls.js@latest"></script>
<script>
    // Play video in the embedded player
    function playVideo(url, element) {
        // Remove active class from all links
        document.querySelectorAll('#playlist a').forEach(a => a.classList.remove('active'));

        // Add active class to the clicked link
        element.classList.add('active');

        var video = document.getElementById('main-video');

        // Check for native HLS support (Safari)
        if (video.canPlayType('application/vnd.apple.mpegurl')) {
            video.src = url;
        }
        // Check for hls.js support (other browsers)
        else if (Hls.isSupported()) {
            var hls = new Hls();
            hls.loadSource(url);
            hls.attachMedia(video);
        }
        // Unsupported browser
        else {
            alert("Your browser does not support HLS.");
        }

        // Start playback
        video.play();
    }

    // Handle custom playlist creation
    document.getElementById('createPlaylistForm').addEventListener('submit', function (e) {
        e.preventDefault();

        const videoUrls = document.getElementById('videoUrls').value.split('\n').filter(url => url.trim() !== '');

        fetch('/api/playlist/create', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(videoUrls),
        })
        .then(response => response.json())
        .then(data => {
            alert(data); // Show success message
            location.reload(); // Refresh the page to show the new playlist
        })
        .catch(error => {
            console.error('Error:', error);
            alert('An error occurred while creating the playlist.');
        });
    });
</script>